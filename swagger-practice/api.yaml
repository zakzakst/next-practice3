openapi: 3.1.0
info:
  title: MY BLOG BFF API
  version: 1.0.0
  description: ブログ投稿サイト「MY BLOG」のBFF API定義です

servers:
  - url: http://localhost:3000/api
    description: ローカル開発環境
  - url: https://develop.com/api
    description: 検証環境
  - url: https://production.com/api
    description: 本番環境

security:
  - BearerAuth: []

paths:
  /posts:
    get:
      summary: ブログ記事一覧を取得
      operationId: getPosts
      parameters:
        - $ref: "#/components/parameters/SortOrder"
        - name: limit
          in: query
          description: "取得する記事の最大数"
          required: false
          schema:
            type: integer
          example: 10
        - name: offset
          in: query
          description: "開始位置（20を指定すると21件目から取得）"
          required: false
          schema:
            type: integer
          example: 20
        - name: q
          in: query
          description: "タイトルや本文に含まれるキーワードで検索"
          required: false
          schema:
            type: string
          example: 旅行
      responses:
        "200":
          description: 記事一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
    post:
      summary: ブログ記事を新規作成
      operationId: createPost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  description: 記事タイトル
                  type: string
                body:
                  description: 記事本文
                  type: string
              required:
                - title
                - body
            examples:
              "新規記事作成":
                value:
                  title: 北海道に行ってきました
                  body: 美味しいものをいっぱい食べれて満足でした
      responses:
        "201":
          description: 新規作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: 記事ID
                    type: integer
                  title:
                    description: 記事タイトル
                    type: string
                  body:
                    description: 記事本文
                    type: string
                  createdAt:
                    description: 作成日時
                    type: string
                    format: date-time
              examples:
                "新規作成に成功":
                  value:
                    id: 1
                    title: 北海道に行ってきました
                    body: 美味しいものをいっぱい食べれて満足でした
                    createdAt: 2024-06-01T12:34:56Z
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /posts/{id}:
    get:
      summary: ブログ記事詳細を取得
      operationId: getPostById
      parameters:
        - name: id
          in: path
          description: 取得したい記事のID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: 記事ID
                    type: integer
                  title:
                    description: タイトル
                    type: string
                  body:
                    description: 記事本文
                    type: string
                  createdAt:
                    description: 作成日時
                    type: string
                    format: date-time
              examples:
                "記事詳細情報取得に成功":
                  value:
                    id: 1
                    title: サイトをリニューアルしました
                    body: より目的の記事が見つかりやすいデザインになりました
                    createdAt: 2024-06-01T12:34:56Z
    put:
      summary: ブログ記事の更新
      operationId: updatePostById
      parameters:
        - name: id
          in: path
          description: 更新したい記事のID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  description: 記事タイトル
                  type: string
                body:
                  description: 記事本文
                  type: string
              required: []
            examples:
              "タイトルのみ更新":
                value:
                  title: 更新したタイトル
              "本文のみ更新":
                value:
                  body: 更新した本文
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: 記事ID
                    type: integer
                  title:
                    description: タイトル
                    type: string
                  body:
                    description: 記事本文
                    type: string
                  createdAt:
                    description: 作成日時
                    type: string
                    format: date-time
                  updatedAt:
                    description: 更新日時
                    type: string
                    format: date-time
              examples:
                "タイトルの更新に成功":
                  value:
                    id: 1
                    title: 更新したタイトル
                    body: より目的の記事が見つかりやすいデザインになりました
                    createdAt: 2024-06-01T12:34:56Z
                    updatedAt: 2024-06-07T12:34:56Z
                "本文の更新に成功":
                  value:
                    id: 1
                    title: サイトをリニューアルしました
                    body: 更新した本文
                    createdAt: 2024-06-01T12:34:56Z
                    updatedAt: 2024-06-07T12:34:56Z
    delete:
      summary: ブログ記事の削除
      operationId: deletePostById
      parameters:
        - name: id
          in: path
          description: 削除したい記事のID
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: 削除成功（レスポンスボディなし）
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: エラーの概要を伝えるメッセージ
        errors:
          type: object
          description: エラーの詳細な情報
          additionalProperties:
            type: string
  responses:
    ValidationError:
      description: バリデーションエラー
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            message: 送信されたデータが正しくありません
            errors:
              title: タイトルは必須です
              body: 本文は500文字以内で入力してください
    UnauthorizedError:
      description: 認証エラー
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            message: 認証が必要です
            errors:
              code: UNAUTHORIZED
  parameters:
    SortOrder:
      name: sort
      in: query
      description: "並び順（asc: 昇順、desc: 降順）"
      required: false
      schema:
        type: string
        enum: [asc, desc]
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
